spring:

  profiles: default

  data:
    mysql:
      url: jdbc:mysql://mariadb:3306/raptor?createDatabaseIfNotExist=true
      username: root
      password: raptor
      # Keep the connection alive if idle for a long time (needed in production)
      testWhileIdle: true
      validationQuery: SELECT 1
      lastInsertQuery: SELECT LAST_INSERT_ID()

  jpa:
    show-sql: false
    database-platform: org.hibernate.dialect.MySQL5Dialect
    properties:
        hibernate:
            enable_lazy_load_no_trans: true
    # Hibernate ddl auto (none, validate, update, create, create-drop)
    hibernate:
      ddl: true
      ddl-auto: validate
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
      dialect: org.hibernate.dialect.MySQL5Dialect

server:
  contextPath: /auth
  port: 8090
  address: auth
  error:
    whitelabel:
      enabled: true

logging:
  level:
#    root: INFO
#    org.springframework.security: DEBUG
    org.createnet.raptor.auth.service: DEBUG
    org.createnet.raptor: DEBUG

raptor:
  admin:
    enabled: true
    username: admin
    password: admin
    email: admin@raptor.local

  auth:
    header: Authorization
    headerPrefix: Bearer
    # A secret used application wide for login token generation, keep it really secret
    secret: Voi che vivete sicuri Nelle vostre tiepide case
    # TTL in seconds, 1800 = 30 minutes
    expiration: 1800
    route:
      authentication:
        path: /login
        refresh: /refresh
